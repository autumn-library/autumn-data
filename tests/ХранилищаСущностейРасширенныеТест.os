#Использовать ".."
#Использовать "."
#Использовать autumn

&Тест
Процедура КогдаПолучаетсяРасширенноеХранилищеСущностей_ТогдаОноРасширяетОбычноеХранилищеСущностей() Экспорт

	// Дано
	СоветДругогоМастера = ГенераторДанных.СоветДругогоМастераСОднимКоннекторомБезИмениИсточникаКакСоответствие();

	Поделка = Новый Поделка(СоветДругогоМастера);
	Поделка.ЗапуститьПриложение();

	// Когда
	ХранилищеСущностей = Поделка.НайтиЖелудь("ХранилищеФизическиеЛица");

	// Тогда
	Ожидаем.Что(ХранилищеСущностей.ПолучитьОбъектМодели().ИмяТаблицы()).Равно("ФизическиеЛица");
	Ожидаем.Что(ХранилищеСущностей.ПолучитьКоннектор()).ИмеетТип("КоннекторInMemory");

КонецПроцедуры

&Тест
Процедура КогдаПолучаетсяРасширенноеХранилищеСущностей_ТогдаЧерезНегоМожноВыполнятьОперацииНадСущностями() Экспорт

	// Дано
	СоветДругогоМастера = ГенераторДанных.СоветДругогоМастераСОднимКоннекторомБезИмениИсточникаКакСоответствие();

	Поделка = Новый Поделка(СоветДругогоМастера);
	Поделка.ЗапуститьПриложение();

	ХранилищеСущностей = Поделка.НайтиЖелудь("ХранилищеФизическиеЛица");

	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	ФизическоеЛицо.Идентификатор = "1";

	ФизическоеЛицо.Сохранить();

	// Тогда
	НайденноеФизЛицо = ХранилищеСущностей.ПолучитьОдно("1");

	Ожидаем.Что(НайденноеФизЛицо.Идентификатор).Равно("1");

	// Тогда
	НайденноеФизЛицо = ХранилищеСущностей.НайтиПоИдентификатору("1");
	Ожидаем.Что(НайденноеФизЛицо.Идентификатор).Равно("1");

КонецПроцедуры
