#Использовать ".."
#Использовать "."
#Использовать autumn

&Тест
Процедура КогдаПолучаетсяРасширенноеХранилищеСущностей_ТогдаОноРасширяетОбычноеХранилищеСущностей() Экспорт

	// Дано
	СоветДругогоМастера = ГенераторДанных.СоветДругогоМастераСОднимКоннекторомБезИмениИсточникаКакСоответствие();

	Поделка = Новый Поделка(СоветДругогоМастера);
	Поделка.ЗапуститьПриложение();

	// Когда
	ХранилищеСущностей = Поделка.НайтиЖелудь("ХранилищеФизическиеЛица");

	// Тогда
	Ожидаем.Что(ХранилищеСущностей.ПолучитьОбъектМодели().ИмяТаблицы()).Равно("ФизическиеЛица");
	Ожидаем.Что(ХранилищеСущностей.ПолучитьКоннектор()).ИмеетТип("КоннекторInMemory");

КонецПроцедуры

&Тест
Процедура КогдаПолучаетсяРасширенноеХранилищеСущностей_ТогдаЧерезНегоМожноВыполнятьОперацииНадСущностями() Экспорт

	// Дано
	СоветДругогоМастера = ГенераторДанных.СоветДругогоМастераСОднимКоннекторомБезИмениИсточникаКакСоответствие();

	Поделка = Новый Поделка(СоветДругогоМастера);
	Поделка.ЗапуститьПриложение();

	ХранилищеСущностей = Поделка.НайтиЖелудь("ХранилищеФизическиеЛица");

	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	ФизическоеЛицо.Идентификатор = 1;

	ФизическоеЛицо.Сохранить();

	// Когда
	НайденноеФизЛицо = ХранилищеСущностей.ПолучитьОдно(1);

	// Тогда
	Ожидаем.Что(НайденноеФизЛицо.Идентификатор).Равно(1);

	// Когда
	НайденноеФизЛицо = ХранилищеСущностей.НайтиПоИдентификатору(1);
	
	// Тогда
	Ожидаем.Что(НайденноеФизЛицо.Идентификатор).Равно(1);

КонецПроцедуры

&Тест
Процедура КогдаПолучаетсяРасширенноеХранилищеСущностей_ТогдаПростойМетодЗапросаРаботает() Экспорт

	// Дано
	СоветДругогоМастера = ГенераторДанных.СоветДругогоМастераСОднимКоннекторомБезИмениИсточникаКакСоответствие();

	Поделка = Новый Поделка(СоветДругогоМастера);
	Поделка.ЗапуститьПриложение();

	ХранилищеСущностей = Поделка.НайтиЖелудь("ХранилищеФизическиеЛица");

	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	
	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	ФизическоеЛицо.Идентификатор = 1;
	ФизическоеЛицо.Сохранить();

	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	ФизическоеЛицо.Идентификатор = 2;
	ФизическоеЛицо.Сохранить();

	// Когда
	НайденноеФизЛицо = ХранилищеСущностей.ПолучитьОдноПоИдентификаторРавно(1);
	
	// Тогда
	Ожидаем.Что(НайденноеФизЛицо.Идентификатор).Равно(1);

КонецПроцедуры

&Тест
Процедура КогдаПолучаетсяРасширенноеХранилищеСущностей_ТогдаСложныйМетодЗапросаРаботает() Экспорт

	// Дано
	СоветДругогоМастера = ГенераторДанных.СоветДругогоМастераСОднимКоннекторомБезИмениИсточникаКакСоответствие();

	Поделка = Новый Поделка(СоветДругогоМастера);
	Поделка.ЗапуститьПриложение();

	ХранилищеСущностей = Поделка.НайтиЖелудь("ХранилищеФизическиеЛица");

	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	ФизическоеЛицо.Идентификатор = 1;
	ФизическоеЛицо.Сохранить();

	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	ФизическоеЛицо.Идентификатор = 2;
	ФизическоеЛицо.Сохранить();

	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	ФизическоеЛицо.Идентификатор = 3;
	ФизическоеЛицо.Сохранить();

	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	ФизическоеЛицо.Идентификатор = 4;
	ФизическоеЛицо.Сохранить();

	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	ФизическоеЛицо.Идентификатор = 5;
	ФизическоеЛицо.Сохранить();

	// Когда
	Первые = 3;
	Смещение = 2;
	Идентификатор = 2;
	НайденныеФизЛица = ХранилищеСущностей.ПолучитьПервыеСоСмещениемПоИдентификаторБольшеИлиРавноУпорядочитьПоИдентификаторУбыв(
		Первые,
		Смещение,
		Идентификатор
	);
	
	// Тогда
	Ожидаем.Что(НайденныеФизЛица.Количество()).Равно(2);
	Ожидаем.Что(НайденныеФизЛица[0].Идентификатор).Равно(3);
	Ожидаем.Что(НайденныеФизЛица[1].Идентификатор).Равно(2);

КонецПроцедуры

//КогдаПолучаетсяРасширенноеХранилищеСущностей_ТогдаСложныйМетодЗапросаРаботает();