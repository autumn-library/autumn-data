#Использовать ".."
#Использовать "."
#Использовать autumn
#Использовать fs

&Тест
Процедура СозданиеЗаписейВБДСКоннекторомJSON() Экспорт

	// Дано
	КаталогБазы = "jsondatabase";
	ФС.ОбеспечитьПустойКаталог(КаталогБазы);

	Детальки = Новый Соответствие();

	СекцияData = Новый Соответствие();
	Детальки.Вставить("data", СекцияData);

	ИсточникиДанных = Новый Соответствие();
	СекцияData.Вставить("ИсточникиДанных", ИсточникиДанных);

	ИсточникиДанных.Вставить("ТипКоннектора", "КоннекторJSON");
	ИсточникиДанных.Вставить("СтрокаСоединения", КаталогБазы);

	СоветДругогоМастера = Новый СоветДругогоМастера();
	СоветДругогоМастера.ЗначенияДеталек(Детальки);

	Поделка = Новый Поделка(СоветДругогоМастера);
	Поделка.ЗапуститьПриложение();

	ХранилищеСущностей = Поделка.НайтиЖелудь("ХранилищеФизическиеЛица");

	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	
	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	ФизическоеЛицо.Идентификатор = 1;
	ФизическоеЛицо.Сохранить();

	ФизическоеЛицо = ХранилищеСущностей.СоздатьЭлемент();
	ФизическоеЛицо.Идентификатор = 2;
	ФизическоеЛицо.Сохранить();

	// Когда
	НайденноеФизЛицо = ХранилищеСущностей.ПолучитьОдноПоИдентификаторРавно(1);
	
	// Тогда
	Ожидаем.Что(НайденноеФизЛицо.Идентификатор).Равно(1);
	Ожидаем.Что(ФС.КаталогПустой(КаталогБазы)).Равно(Ложь);
КонецПроцедуры

СозданиеЗаписейВБДСКоннекторомJSON();