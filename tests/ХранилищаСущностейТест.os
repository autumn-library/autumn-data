#Использовать ".."
#Использовать "."
#Использовать autumn

&Тест
Процедура КогдаЗапрашиваетсяХранилищеСущностей_ТогдаОноПолучается() Экспорт
	
	// Дано
	СоветДругогоМастера = ГенераторДанных.СоветДругогоМастераСОднимКоннекторомКакСоответствие();

	Поделка = Новый Поделка(СоветДругогоМастера);
	Поделка.ЗапуститьПриложение();

	// Когда
	ХранилищеСущностей = Поделка.НайтиЖелудь("ХранилищеСущностейОсновнойФизическоеЛицо");

	// Тогда
	Ожидаем.Что(ХранилищеСущностей).ИмеетТип("ХранилищеСущностей");
	Ожидаем.Что(ХранилищеСущностей.ПолучитьОбъектМодели().ИмяТаблицы()).Равно("ФизическиеЛица");
	Ожидаем.Что(ХранилищеСущностей.ПолучитьКоннектор()).ИмеетТип("КоннекторInMemory");

КонецПроцедуры

&Тест
Процедура КогдаЗапрашиваетсяХранилищеСущностейИЕстьОдинИсточникБезИмени_ТогдаОноПолучается() Экспорт

	// Дано
	СоветДругогоМастера = ГенераторДанных.СоветДругогоМастераСОднимКоннекторомБезИмениИсточникаКакСоответствие();

	Поделка = Новый Поделка(СоветДругогоМастера);
	Поделка.ЗапуститьПриложение();

	// Когда
	ХранилищеСущностей = Поделка.НайтиЖелудь("ХранилищеСущностейФизическоеЛицо");

	// Тогда
	Ожидаем.Что(ХранилищеСущностей).ИмеетТип("ХранилищеСущностей");
	Ожидаем.Что(ХранилищеСущностей.ПолучитьОбъектМодели().ИмяТаблицы()).Равно("ФизическиеЛица");
	Ожидаем.Что(ХранилищеСущностей.ПолучитьКоннектор()).ИмеетТип("КоннекторInMemory");

КонецПроцедуры

&Тест
Процедура КогдаЗапрашиваетсяХранилищаСущностейПоИмениИсточника_ТогдаОниПолучаются() Экспорт

	// Дано
	СоветДругогоМастера = ГенераторДанных.СоветДругогоМастераСДвумяКоннекторамиКакМассив();

	Поделка = Новый Поделка(СоветДругогоМастера);
	Поделка.ЗапуститьПриложение();

	// Когда
	НайденныеХранилищаСущностей = Поделка.НайтиЖелуди("ХранилищеСущностейОсновной", , "Соответствие");

	// Тогда
	Ожидаем.Что(НайденныеХранилищаСущностей.Количество()).Равно(2);

	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейОсновнойСтранаМира"]).ИмеетТип("ХранилищеСущностей");
	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейОсновнойСтранаМира"].ПолучитьОбъектМодели().ИмяТаблицы()).Равно("СтраныМира");
	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейОсновнойСтранаМира"].ПолучитьКоннектор()).ИмеетТип("КоннекторInMemory");

	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейОсновнойФизическоеЛицо"]).ИмеетТип("ХранилищеСущностей");
	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейОсновнойФизическоеЛицо"].ПолучитьОбъектМодели().ИмяТаблицы()).Равно("ФизическиеЛица");
	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейОсновнойФизическоеЛицо"].ПолучитьКоннектор()).ИмеетТип("КоннекторInMemory");

	// Когда
	НайденныеХранилищаСущностей = Поделка.НайтиЖелуди("ХранилищеСущностейДополнительный", , "Соответствие");

	// Тогда
	Ожидаем.Что(НайденныеХранилищаСущностей.Количество()).Равно(2);

	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейДополнительныйДокумент"]).ИмеетТип("ХранилищеСущностей");
	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейДополнительныйДокумент"].ПолучитьОбъектМодели().ИмяТаблицы()).Равно("Документы");
	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейДополнительныйДокумент"].ПолучитьКоннектор()).ИмеетТип("КоннекторSQLite");

	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейДополнительныйФизическоеЛицо"]).ИмеетТип("ХранилищеСущностей");
	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейДополнительныйФизическоеЛицо"].ПолучитьОбъектМодели().ИмяТаблицы()).Равно("ФизическиеЛица");
	Ожидаем.Что(НайденныеХранилищаСущностей["ХранилищеСущностейДополнительныйФизическоеЛицо"].ПолучитьКоннектор()).ИмеетТип("КоннекторSQLite");

КонецПроцедуры